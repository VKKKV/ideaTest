package atguigu.java.GenericTest;

/**
 * Created on 2022/3/28星期一21:21
 *
 * @author abc
 *
 * 泛型：允许在定义类、接口时通过一个标识符表示类中的某个属性的类型或者是某个方法的
 * 返回值及参数类型。这个类型参数将在使用时（例如，继承或实现这个接口，用这个类型声明
 * 变量、创建对象时）确定（即传入实际的类型参数，也称为类型实参）。
 *
 * jdk5以后，java引入了“参数化类型（Parameterized type”)的概念，允许我们创建集合
 * 时再指定集合元素的类型，正如：list<string>，这表明该list只能保存字符串类型的对象
 * jdk5改写了集合框架中的全部接口和类，为这些接口、类增加了泛型支持，从而可以
 * 在声明集合变量、创建集合对象时传入类型实参。
 *
 *
 * 总结：
 * 1.集合接口或集合类在jdk5都修改为带泛型的结构
 * 2.实例化集合类时，可以指明具体的泛型类型
 * 3.指明后，在集合类或接口中凡是定义类或接口时，内部结构。。
 * 4.注意点：泛型的类型必须是类，不能是基本数据类型。
 * 5.如果实例化时，没有指明泛型的类型。默认类型为java.lang.object类型
 *
 *
 * 如何自定义泛型结构：泛型类、泛型接口；泛型方法
 *
 * 1.静态方法中不能使用类的泛型：static早于实例化
 * 2.异常类不能声明为泛型类
 * 3.不能使用new E[]。但是可以E[] elements=(E[])new Object[capacity(容量)]
 *   参考arraylist源码纵声明：Object[] elementData，而非泛型参数类型数组
 *
 *
 *
 * 泛型方法：在方法中出现了泛型的结构，泛型参数与类的泛型参数无关
 *          可以声明为静态的，原因：泛型参数是在调用方法时确定的，并非在实例化时确定
 *
 * 通配符：？
 * 添加：对于list<?>只能添加null，不能向其内部添加数据
 *
 * 有限制条件的通配符的使用
 *  ？extends A:
 *  ? super A
 *
 *
 */
public class java1 {

}
